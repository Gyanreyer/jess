<script webc:type="js" webc:root="override">
  const { readFile } = require("node:fs/promises");
  const path = require("node:path");
  const eleventyImage = require("@11ty/eleventy-img");

  (async () => {
    const spritesheetPath = path.resolve(spritesheet);

    const imageStats = await eleventyImage(spritesheetPath, {
      formats: ["webp"],
      outputDir: "_site/img",
    });

    const metadata = await readFile(spritesheetPath.replace(".webp", ".json"));
    const { spriteWidth, spriteHeight, columnCount, rowCount, spriteCount } =
      JSON.parse(metadata);

    return /* html */ `<img-sequence
      style="--spritesheet-url: url('${imageStats.webp[0].url}'); --sprite-count: ${spriteCount}; --column-count: ${columnCount}; --row-count: ${rowCount}; aspect-ratio: ${spriteWidth}/${spriteHeight}"
    ></img-sequence>`;
  })();
</script>
<script src="./img-sequence.js"></script>
<style>
  img-sequence {
    display: block;
    width: 100%;

    background-image: var(--spritesheet-url);

    background-repeat: no-repeat;
    background-size: calc(100% * var(--column-count))
      calc(100% * var(--row-count));

    --cell: round(
      clamp(0, var(--progress), 1) * (var(--sprite-count) - 1) + 1,
      1
    );
    --row: round(up, calc(var(--cell) / var(--column-count)), 1);
    --column: calc(var(--cell) - (var(--row) - 1) * var(--column-count));
    background-position-x: calc(
      (var(--column, 1) - 1) * 100% / (var(--column-count, 1) - 1)
    );
    background-position-y: calc(
      (var(--row, 1) - 1) * 100% / (var(--row-count, 1) - 1)
    );

    transition: opacity 0.3s;
  }

  img-sequence[data-loading] {
    opacity: 0;
  }
</style>
