<section webc:root="override" class="homepage-section">
  <div class="top-padding"></div>
  <article class="section-content">
    <slot></slot>
  </article>
</section>
<style webc:scoped>
  :host {
    --bg: var(--color-primary);
    background: none !important;

    /* Var to track how much the top padding should be tilted */
    --top-tilt-pct: 1;

    --scroll-pct: 0;
    --top-tilt-pct: clamp(0, calc((0.7 - var(--scroll-pct)) / 0.4), 1);

    --max-tilt-angle: 6deg;

    /* Calculate the amount of space we need to leave at the top of this section in order to be able to
        tilt the angled top padding by 5 degrees without cutting it off */
    --angled-top-padding-height: calc(100vw * sin(var(--max-tilt-angle)));

    padding: 20rem 0 calc(20rem - var(--angled-top-padding-height));
    position: relative;
  }

  :host:first-of-type {
    padding: 12rem 0;
  }

  :host:last-child {
    padding: 16rem 0;
  }

  :host:last-of-type::after {
    bottom: 0;
  }

  :host.secondary {
    --bg: var(--color-secondary);
  }

  :host::after {
    content: "";
    position: absolute;
    top: var(--angled-top-padding-height);
    left: 0;
    right: 0;
    bottom: calc(-1 * var(--angled-top-padding-height));
    background-color: var(--bg);
    z-index: 0;
  }

  .top-padding {
    position: absolute;
    top: 0;
    height: var(--angled-top-padding-height);
    z-index: 1;
    width: 100%;
    overflow: hidden;
  }

  :host:nth-child(n + 1) .top-padding::before {
    content: "";
    background-color: var(--bg);
    position: absolute;
    top: 50%;
    left: -20%;
    width: 140%;
    height: 200%;
    transform-origin: center;
    transform: rotate(
      calc(
        (var(--top-tilt-pct) * var(--max-tilt-angle)) - var(--max-tilt-angle)
      )
    );
  }

  .section-content {
    padding: 0 10%;
    z-index: 2;
    position: relative;
    display: flex;
    gap: 2rem 6rem;
    justify-content: center;
    align-items: center;
  }

  h2 {
    font-size: 4rem;
    font-weight: bold;
    margin-bottom: 0.7rem;
    line-height: 1.2;
  }

  p {
    font-size: 1.5rem;
    margin: 0 0 1.1rem 3rem;
    line-height: 1.2;
  }

  .button {
    display: inline-block;
    font-size: 1.2rem;
    font-weight: bold;
    padding: 0.5rem 2rem;
    border-radius: 2em;
    text-decoration: none;
    cursor: pointer;
    transition: opacity 0.3s,
      transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .button:hover {
    opacity: 0.9;
    transform: scale(1.15);
  }

  .section-content .images img {
    transform: translateY(calc(20% * calc(var(--scroll-pct) - 0.25)));
  }

  .section-content .images img {
    display: block;
    width: auto;
    height: auto;
    max-width: 30rem;
    max-height: 30rem;
  }

  .section-content .text {
    transform: translateY(calc(10% * calc(var(--scroll-pct) - 0.5)));
  }
</style>
<script>
  (() => {
    const homePageSections = Array.from(
      document.getElementsByClassName("homepage-section")
    );
    const homePageSectionCount = homePageSections.length;

    const onScroll = () => {
      for (let i = 0; i < homePageSectionCount; ++i) {
        const element = homePageSections[i];
        const boundingClientRect = element.getBoundingClientRect();

        const scrollPercent = boundingClientRect.top / window.innerHeight;

        element.style.setProperty("--scroll-pct", scrollPercent);
      }
    };

    onScroll();

    window.addEventListener("scroll", onScroll, { passive: true });
    window.addEventListener("resize", onScroll, { passive: true });
  })();
</script>
