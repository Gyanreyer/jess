<section webc:root="override" class="homepage-section">
  <div class="top-padding"></div>
  <div class="section-content">
    <slot></slot>
  </div>
</section>
<style webc:scoped>
  :host {
    --bg: var(--color-primary);
    --angled-top-padding-height: calc(100vw * sin(5deg));
    margin: calc(-1 * var(--angled-top-padding-height)) 0
      calc(-2 * var(--angled-top-padding-height));
    padding: calc(6rem + var(--angled-top-padding-height)) 0
      calc(2rem + 2 * var(--angled-top-padding-height));
    --scroll-visibility-pct: 0;
    overflow: hidden;
    position: relative;
    background: none !important;
  }

  :host:last-of-type {
    margin-bottom: 0;
    padding-bottom: 12rem;
  }

  :host.secondary {
    --bg: var(--color-secondary);
  }

  :host::after {
    content: "";
    position: absolute;
    top: calc(var(--angled-top-padding-height) * 2);
    left: 0;
    right: 0;
    bottom: calc(-2 * var(--angled-top-padding-height));
    background-color: var(--bg);
    z-index: 0;
  }

  .top-padding {
    position: absolute;
    top: var(--angled-top-padding-height);
    height: var(--angled-top-padding-height);
    z-index: 1;
    width: 100%;
  }

  :host:nth-child(n + 1) .top-padding::before {
    content: "";
    background-color: var(--bg);
    position: absolute;
    top: 0;
    left: -20%;
    width: 140%;
    height: 200%;
    transform-origin: center;
    transform: rotate(calc(-5deg + (var(--scroll-visibility-pct) * 5deg)));
  }

  .section-content {
    padding: 0 10%;
    z-index: 2;
    position: relative;
  }
</style>
<script>
  (() => {
    const homePageSections = Array.from(
      document.getElementsByClassName("homepage-section")
    );
    const homePageSectionCount = homePageSections.length;

    let upperScrollPctCutoff;
    let lowerScrollPctCutoff;

    const onScroll = () => {
      for (let i = 0; i < homePageSectionCount; ++i) {
        const element = homePageSections[i];
        const boundingClientRect = element.getBoundingClientRect();
        const top = boundingClientRect.top;

        const positionBetweenBounds = Math.max(
          Math.min(
            (top - lowerScrollPctCutoff) /
              (upperScrollPctCutoff - lowerScrollPctCutoff),
            1
          ),
          0
        );

        element.style.setProperty(
          "--scroll-visibility-pct",
          positionBetweenBounds
        );
      }
    };

    const onResize = () => {
      const windowHeight = window.innerHeight;
      upperScrollPctCutoff = 0.3 * windowHeight;
      lowerScrollPctCutoff = 0.7 * windowHeight;
      const homepageSectionAngledPaddingHeight =
        window.innerWidth * Math.sin((Math.PI * 5) / 180);
      document.documentElement.style.setProperty(
        "--hs-angled-padding-height",
        `${homepageSectionAngledPaddingHeight}px`
      );

      onScroll();
    };

    onResize();

    window.addEventListener("scroll", onScroll, { passive: true });
    window.addEventListener("resize", onResize, { passive: true });
  })();
</script>
